# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: ListNode) -> ListNode:
        if head is None:
            return None
        
        count=1
        odd=ListNode(head.val)
        
        if(head.next is not None):
            even=ListNode(head.next.val)
        else:
            return odd
        
        od=odd
        ev=even
        
        node=head.next.next
        while node:
            # print(node.val)
            
            if(count%2==1):
                od.next=ListNode(node.val)
                od=od.next
            else:
                ev.next=ListNode(node.val)
                ev=ev.next
            
                
            node=node.next
            count+=1

        od.next=even
        return odd
    
        
        
        
