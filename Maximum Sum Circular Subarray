class Solution:
    def maxSubarraySumCircular(self, A: List[int]) -> int:
        
        B=A[:]
        max_so_far=-1e9-1
        max_ending=0
        i=0
        
        while(i<len(A)):
            max_ending=max_ending+A[i]
            if(max_so_far<max_ending):
                max_so_far=max_ending
            if(max_ending<0):
                max_ending=0
            i+=1   
        
        min_so_far=1e9
        min_ending=1e9
        i=0
        while(i<len(A)):
            if(min_ending>0):
                min_ending=A[i]
            else:
                min_ending+=A[i]
            
            min_so_far=min(min_so_far,min_ending)
            i+=1
        if(sum(A)==min_so_far):
            return max_so_far
        total=max(max_so_far,sum(A)-min_so_far)
        return total
    
                    
                
                
                
        
